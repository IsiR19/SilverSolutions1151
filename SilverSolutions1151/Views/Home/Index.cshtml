@model SilverSolutions1151.Data.Entity.ProductionReport

@{
    ViewData["Title"] = "Home Page";
}

<style type="text/css">
    .search-label-container {
        display: flex;
        align-items: center;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        padding: 0.375rem 0.75rem;
    }

    .search-label {
        font-weight: bold;
        margin-right: 0.5rem;
    }

    .control-label-bold {
        font-weight: bold;
    }

    .rounded-border-container {
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        padding: 1rem;
        margin-top: 1rem;
    }


    .balance-label-container {
        margin-bottom: 1rem;
    }

    .manufacture-date-label {
        margin-right: 0.5rem;
    }

    .rounded-border-heading {
        margin-top: 0;
        margin-bottom: 0.5rem;
    }

    .rounded-border-separator {
        margin-top: 0.5rem;
        margin-bottom: 0.5rem;
    }
</style>

<br />
<br />

<div class="row">
    <div class="col-md-12">
        <div class="search-label-container rounded-container">
            <label for="datePicker" class="search-label">Search manufacture date:</label>
            <input type="date" id="datePicker" class="form-control" value="@Model.SearchDate" />
            <button type="button" class="btn btn-primary" onclick="searchByDate()">Search</button>
        </div>
    </div>
</div>

<br/>

<form asp-action="Create" class="rounded-border-container">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @if (ViewBag.FilterDate != null)
    {
        <p><strong>Showing balances for : @ViewBag.FilterDate</strong></p>
    }
    <div class="form-group">
        <div class="rounded-border-container">
            <h4 class="rounded-border-heading">Raw Tobacco</h4>
            <hr class="rounded-border-separator">
            <div class="balance-label-container">
                <label class="balance-label">Opening Balance(Kg): @Model.RawTobaccoBalancePreviousDay</label>
                <br />
                <label class="balance-label">Current Balance(Kg): @Model.RawTobaccoBalanceCurrentDay</label>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Manufacture Date:</label>
                    <input asp-for="OpeningBalance" class="form-control" type="date" id="ManufactureDate" />
                </div>

                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Quantity(Kg):</label>
                    <input asp-for="OpeningBalance" class="form-control" id="quantity"/>
                </div>
            </div>

            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="addRawTobacco()">Add</button>
                <button type="button" class="btn btn-success" onclick="viewRawTobaccoTransaction()">View</button>
            </div>

        </div>
    </div>


    <div class="form-group">
        <div class="rounded-border-container">
            <h4 class="rounded-border-heading">Manufacturing</h4>
            <hr class="rounded-border-separator">
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Manufacture Date:</label>
                    <input asp-for="OpeningBalance" class="form-control" type="date" id="manufacturingDate" />
                </div>

                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Tobacco Qty(Kg):</label>
                    <input asp-for="OpeningBalance" class="form-control" id="tobaccoQty"/>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Syrup Qty(kg):</label>
                    <input asp-for="OpeningBalance" class="form-control" id="SyrupQty" />
                </div>

                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Glycerine Qty(Kg):</label>
                    <input asp-for="OpeningBalance" class="form-control" id="GlycerinQty" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Preservative Qty(Kg):</label>
                    <input asp-for="OpeningBalance" class="form-control" id="PreservativeQty" />
                </div>

                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Flavour Qty(Kg):</label>
                    <input asp-for="OpeningBalance" class="form-control" id="FlavourQty" />
                </div>
            </div>

            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="addManufacturing()">Add</button>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="rounded-border-container">
            <h4 class="rounded-border-heading">Tobacco mixing in progress</h4>
            <hr class="rounded-border-separator">
            <div class="balance-label-container">
                <label class="balance-label">Opening Balance(Kg): @Model.MixedTobaccoBalancePreviousDay</label>
                <br />
                <label class="balance-label">Current Balance(Kg): @Model.MixedTobaccoBalanceCurrentDay</label>
            </div>

            <div class="form-group">
                <button type="button" class="btn btn-success" onclick="viewMixedTobaccoTransaction()">View</button>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="rounded-border-container">
            <h4 class="rounded-border-heading">Packaging</h4>
            <hr class="rounded-border-separator">
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Manufacture Date:</label>
                    <input asp-for="OpeningBalance" class="form-control" type="date" id="PackagingDate" />
                </div>

                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Molases Quantity(Kg):</label>
                    <input asp-for="OpeningBalance" class="form-control" id="MolasesQty" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="OpeningBalance" class="manufacture-date-label">Packaging Size(g):</label>
                    <input asp-for="OpeningBalance" class="form-control" id="PackagingSize" />
                </div>
            </div>

            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="addPackaging()">Add</button>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="rounded-border-container">
            <h4 class="rounded-border-heading">Ready Stock</h4>
            <hr class="rounded-border-separator">
            @if (Model.BalancesByPackagingSize.Count == 0)
            {
                <p>No data has been captured for the current day.</p>
            }
            else
            {
                <div class="balance-group-container">
                    @foreach (var group in Model.BalancesByPackagingSize)
                    {
                        <div class="rounded-border-container">
                            <p class="balance-group-amount"><strong>Packaging Size(g): @group.PackagingSize</strong></p>
                            <p class="balance-group-amount">Current Balance(Boxes): @group.Amount</p>
                        </div>
                    }
                </div>
                <br />

                <div class="form-group">
                    <button type="button" class="btn btn-success" onclick="viewReadyStockTransaction()">View</button>
                </div>
            }
        </div>
    </div>


    <div class="form-group">
        <div class="rounded-border-container">
            <h4 class="rounded-border-heading">Sold</h4>
            <hr class="rounded-border-separator">
            <div class="balance-group-container">
                @foreach (var group in Model.SoldBySize)
                {
                    <div class="rounded-border-container">
                        <p class="balance-group-amount"><strong>Packaging Size(g): @group.PackagingSize</strong></p>
                        <p class="balance-group-amount">Current Balance(Boxes): @group.Amount</p>
                    </div>
                }
            </div>
            <br />

            <div class="form-group">
                <a href="@Url.Action("Create", "CustomerInvoices")" class="btn btn-primary ml-2">Create Invoice</a>
                <button type="button" class="btn btn-success" onclick="viewSoldTransaction()">View</button>
                <a href="@Url.Action("Index", "CustomerInvoices")" class="btn btn-primary ml-2">View Invoices</a>
            </div>
        </div>
    </div>
</form>

@section Scripts
    {
    <script type="text/javascript">
        function addRawTobacco() {
            console.log('addRawTobacco function executed.');

            const quantity = document.getElementById("quantity").value;
            const manufactureDate = document.getElementById("ManufactureDate").value;

            const url = '@Url.Action("AddTobacco", "Home")?quantity='+ quantity +'&manufactureDate=' + manufactureDate;
            window.location.href = url;
        }

        function addManufacturing() {
            console.log('addManufacturing function executed.');

            const manufacturingQty = document.getElementById("tobaccoQty").value;
            const glycerineQty = document.getElementById("GlycerinQty").value;
            const flavourQty = document.getElementById("FlavourQty").value;
            const syrupQty = document.getElementById("SyrupQty").value;
            const preservativeQty = document.getElementById("PreservativeQty").value;
            const manufactureDate = document.getElementById("manufacturingDate").value;

            const url = '@Url.Action("AddManufacturing", "Home")?manufacturingQty='+manufacturingQty+'&manufactureDate='+manufactureDate+'&glycerineQty='+glycerineQty+'&flavourQty='+flavourQty+'&syrupQty='+syrupQty+'&preservativeQty='+preservativeQty;
            window.location.href = url;
        }

        function addPackaging() {
            console.log('addPackaging function executed.');
            debugger;
            const MolasesQty = document.getElementById("MolasesQty").value;
            const packagingSize = document.getElementById("PackagingSize").value;
            const packagingDate = document.getElementById("PackagingDate").value;

            const url = '@Url.Action("AddPackaging", "Home")?molasesQty=' + MolasesQty + '&packagingDate=' + packagingDate + '&packagingSize=' + packagingSize;

            window.location.href = url;
        }

        function viewRawTobaccoTransaction() {
            console.log('viewRawTobaccoTransaction function executed.');

            const url = '@Url.Action("Index", "Manufacture")?stage=RawTobacco';
            window.location.href = url;
        }

        function viewMixedTobaccoTransaction() {
            console.log('viewMixedTobaccoTransaction function executed.');

            const url = '@Url.Action("Mixing", "Manufacture")?stage=Mixing';
            window.location.href = url;
        }

        function viewReadyStockTransaction() {
            console.log('viewReadyStockTransaction function executed.');

            const url = '@Url.Action("Packaging", "Manufacture")?stage=Complete';
            window.location.href = url;
        }

        function viewSoldTransaction() {
            console.log('viewSoldTransaction function executed.');

            const url = '@Url.Action("Index", "Manufacture")?stage=Sold';
            window.location.href = url;
        }

        function searchByDate() {
            console.log('searchByDate function executed.');

            const manufactureDate = document.getElementById("datePicker").value;

            const url = '@Url.Action("Index", "Home")?searchDate='+ manufactureDate;
            window.location.href = url;
        }
    </script>
}
