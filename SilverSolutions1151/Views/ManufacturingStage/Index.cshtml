@model X.PagedList.IPagedList<SilverSolutions1151.Data.Entity.ManufacturingStage>
@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Core


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@using (Html.BeginForm("Index", "ManufacturingStage", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">

    <thead>
        <tr>
            <th>
                @Html.DisplayName("Production Stage")
            </th>
            <th>
                @Html.DisplayName("Product Type")
            </th>
            <th>
                @Html.DisplayName("Ingredient")
            </th>
            <th>
                @Html.DisplayName("Quantity")
            </th>
            <th>
                @Html.DisplayName("Date")
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductionStage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductType.Name)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ingredient.Description)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
        </tr>
}
    </tbody>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))